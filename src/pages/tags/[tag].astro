---
import type { MarkdownInstance } from "astro";
import Layout from "../../layouts/Layout.astro";

interface Frontmatter {
  title: string;
  description: string;
  tags: string[];
}

interface Post {
  params: { tag: string };
  props: { posts: MarkdownInstance<Frontmatter>[] };
}

export async function getStaticPaths(): Promise<Post[]> {
  const allPosts = await Astro.glob<Frontmatter>("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(tag),
);
---

<Layout title={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts.map((post) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>
</Layout>
